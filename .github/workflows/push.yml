name: Docker Image CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # migration:
  #   name: db migraiton
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       node_version: [16]
  #       os: [ubuntu-20.04]

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: use node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}

  #     - name: cache dependencies
  #       id: cache
  #       uses: actions/cache@v3
  #       with:
  #         path: "**/node_modules"
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-node-

  #     - name: install dependencies
  #       if: steps.cache.outputs.cache-hit != 'true'
  #       run: npm install prisma

  #     - name: setting .env
  #       run: |
  #         echo "MYSQL_URL=${{ secrets.MYSQL_URL }}" >> .env
  #         cat .env

  #     - name: prisma migraiton
  #       run: |
  #         npx prisma migrate deploy

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: "print"
        run: |
          ls -al
          pwd

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: asia-northeast3-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.KEY }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: asia-northeast3-docker.pkg.dev/easy-wms/ez-api-build-store/apple:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
